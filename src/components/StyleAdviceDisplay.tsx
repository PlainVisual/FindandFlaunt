// @/components/StyleAdviceDisplay.tsx
"use client";

import Image from 'next/image';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { ScrollArea } from "@/components/ui/scroll-area";
import { ExternalLink, Shirt, Sparkles } from 'lucide-react';
import type { RelevantProduct } from '@/lib/schemas'; // Updated import path
import type { ProvideStylingAdviceOutput } from '@/ai/flows/provide-styling-advice';


interface StyleAdviceDisplayProps {
  originalProduct: RelevantProduct;
  advice: ProvideStylingAdviceOutput;
}

export function StyleAdviceDisplay({ originalProduct, advice }: StyleAdviceDisplayProps) {
  const placeholderImage = "https://placehold.co/400x533.png"; 

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 items-start">
      {/* Original Product Column */}
      <Card className="shadow-xl">
        <CardHeader>
          <CardTitle className="text-xl flex items-center gap-2">
            <Shirt className="h-5 w-5 text-primary" />
            Selected Item
          </CardTitle>
          <CardDescription>{originalProduct.title || "Product Details"}</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="aspect-[3/4] relative w-full rounded-md overflow-hidden bg-muted">
            <Image
              src={originalProduct.imageUrl || placeholderImage}
              alt={originalProduct.title || "Original product"}
              layout="fill"
              objectFit="cover"
              data-ai-hint="fashion clothing"
              onError={(e) => (e.currentTarget.src = placeholderImage)}
            />
          </div>
          <p className="text-lg font-bold text-primary">{originalProduct.price || "N/A"}</p>
          <p className="text-sm text-muted-foreground line-clamp-4">
            {originalProduct.description || "No description available."}
          </p>
        </CardContent>
        <CardFooter>
          {originalProduct.productUrl && (
            <Button asChild className="w-full">
              <a href={originalProduct.productUrl} target="_blank" rel="noopener noreferrer">
                Buy on Shoeby.nl
                <ExternalLink className="ml-2 h-4 w-4" />
              </a>
            </Button>
          )}
        </CardFooter>
      </Card>

      {/* Styling Advice Column */}
      <Card className="shadow-xl">
        <CardHeader>
          <CardTitle className="text-xl flex items-center gap-2">
            <Sparkles className="h-5 w-5 text-accent" />
            StyleSavvy Advice
          </CardTitle>
          <CardDescription>Personalized styling tips for your chosen item.</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="aspect-[3/4] relative w-full rounded-md overflow-hidden bg-muted">
             <Image
              src={advice.outfitImageUrl || placeholderImage}
              alt="AI generated outfit"
              layout="fill"
              objectFit="cover"
              data-ai-hint="fashion model outfit"
              onError={(e) => (e.currentTarget.src = placeholderImage)}
            />
          </div>
          <ScrollArea className="h-[200px] p-4 border rounded-md bg-background">
            <p className="text-sm whitespace-pre-wrap">{advice.stylingAdvice}</p>
          </ScrollArea>
        </CardContent>
         <CardFooter>
            <p className="text-xs text-muted-foreground italic text-center w-full">
                Outfit image and advice generated by AI.
            </p>
        </CardFooter>
      </Card>
    </div>
  );
}
